{"id":"../node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/interfaces/biquad-filter-options.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"biquad-filter-options.js","sourceRoot":"","sources":["../../../src/interfaces/biquad-filter-options.ts"],"names":[],"mappings":"","sourcesContent":["import { TBiquadFilterType } from '../types';\nimport { IAudioNodeOptions } from './audio-node-options';\n\nexport interface IBiquadFilterOptions extends IAudioNodeOptions {\n    detune: number;\n\n    frequency: number;\n\n    gain: number;\n\n    Q: number;\n\n    type: TBiquadFilterType;\n}\n"]}},"error":null,"hash":"42fe91cab999a99313569911ae67cc8b","cacheData":{"env":{}}}