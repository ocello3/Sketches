{"id":"../node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/types/audio-node-constructor-factory.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"audio-node-constructor-factory.js","sourceRoot":"","sources":["../../../src/types/audio-node-constructor-factory.ts"],"names":[],"mappings":"","sourcesContent":["import { TAddAudioNodeConnectionsFunction } from './add-audio-node-connections-function';\nimport { TAudioNodeConstructor } from './audio-node-constructor';\nimport { TAuxiliaryGainNodeStore } from './auxiliary-gain-node-store';\nimport { TCacheTestResultFunction } from './cache-test-result-function';\nimport { TDecrementCycleCounterFunction } from './decrement-cycle-counter-function';\nimport { TDetectCyclesFunction } from './detect-cycles-function';\nimport { TEventTargetConstructor } from './event-target-constructor';\nimport { TGetNativeContextFunction } from './get-native-context-function';\nimport { TIncrementCycleCounterFactory } from './increment-cycle-counter-factory';\nimport { TIndexSizeErrorFactory } from './index-size-error-factory';\nimport { TInvalidAccessErrorFactory } from './invalid-access-error-factory';\nimport { TIsNativeAudioContextFunction } from './is-native-audio-context-function';\nimport { TIsNativeAudioNodeFunction } from './is-native-audio-node-function';\nimport { TIsNativeAudioParamFunction } from './is-native-audio-param-function';\nimport { TIsNativeOfflineAudioContextFunction } from './is-native-offline-audio-context-function';\nimport { TNotSupportedErrorFactory } from './not-supported-error-factory';\n\nexport type TAudioNodeConstructorFactory = (\n    addAudioNodeConnections: TAddAudioNodeConnectionsFunction,\n    auxiliaryGainNodeStore: TAuxiliaryGainNodeStore,\n    cacheTestResult: TCacheTestResultFunction,\n    createIncrementCycleCounter: TIncrementCycleCounterFactory,\n    createIndexSizeError: TIndexSizeErrorFactory,\n    createInvalidAccessError: TInvalidAccessErrorFactory,\n    createNotSupportedError: TNotSupportedErrorFactory,\n    decrementCycleCounter: TDecrementCycleCounterFunction,\n    detectCycles: TDetectCyclesFunction,\n    eventTargetConstructor: TEventTargetConstructor,\n    getNativeContext: TGetNativeContextFunction,\n    isNativeAudioContext: TIsNativeAudioContextFunction,\n    isNativeAudioNode: TIsNativeAudioNodeFunction,\n    isNativeAudioParam: TIsNativeAudioParamFunction,\n    isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction\n) => TAudioNodeConstructor;\n"]}},"error":null,"hash":"0aaed39bf51404330f26d0908c9baffb","cacheData":{"env":{}}}