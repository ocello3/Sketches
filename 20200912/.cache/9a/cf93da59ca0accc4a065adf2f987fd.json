{"id":"../node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/types/base-audio-context-constructor-factory.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"base-audio-context-constructor-factory.js","sourceRoot":"","sources":["../../../src/types/base-audio-context-constructor-factory.ts"],"names":[],"mappings":"","sourcesContent":["import { TAddAudioWorkletModuleFunction } from './add-audio-worklet-module-function';\nimport { TAnalyserNodeConstructor } from './analyser-node-constructor';\nimport { TAudioBufferConstructor } from './audio-buffer-constructor';\nimport { TAudioBufferSourceNodeConstructor } from './audio-buffer-source-node-constructor';\nimport { TBaseAudioContextConstructor } from './base-audio-context-constructor';\nimport { TBiquadFilterNodeConstructor } from './biquad-filter-node-constructor';\nimport { TChannelMergerNodeConstructor } from './channel-merger-node-constructor';\nimport { TChannelSplitterNodeConstructor } from './channel-splitter-node-constructor';\nimport { TConstantSourceNodeConstructor } from './constant-source-node-constructor';\nimport { TConvolverNodeConstructor } from './convolver-node-constructor';\nimport { TDecodeAudioDataFunction } from './decode-audio-data-function';\nimport { TDelayNodeConstructor } from './delay-node-constructor';\nimport { TDynamicsCompressorNodeConstructor } from './dynamics-compressor-node-constructor';\nimport { TGainNodeConstructor } from './gain-node-constructor';\nimport { TIIRFilterNodeConstructor } from './iir-filter-node-constructor';\nimport { TMinimalBaseAudioContextConstructor } from './minimal-base-audio-context-constructor';\nimport { TOscillatorNodeConstructor } from './oscillator-node-constructor';\nimport { TPannerNodeConstructor } from './panner-node-constructor';\nimport { TPeriodicWaveConstructor } from './periodic-wave-constructor';\nimport { TStereoPannerNodeConstructor } from './stereo-panner-node-constructor';\nimport { TWaveShaperNodeConstructor } from './wave-shaper-node-constructor';\n\nexport type TBaseAudioContextConstructorFactory = (\n    addAudioWorkletModule: undefined | TAddAudioWorkletModuleFunction,\n    analyserNodeConstructor: TAnalyserNodeConstructor,\n    audioBufferConstructor: TAudioBufferConstructor,\n    audioBufferSourceNodeConstructor: TAudioBufferSourceNodeConstructor,\n    biquadFilterNodeConstructor: TBiquadFilterNodeConstructor,\n    channelMergerNodeConstructor: TChannelMergerNodeConstructor,\n    channelSplitterNodeConstructor: TChannelSplitterNodeConstructor,\n    constantSourceNodeConstructor: TConstantSourceNodeConstructor,\n    convolverNodeConstructor: TConvolverNodeConstructor,\n    decodeAudioData: TDecodeAudioDataFunction,\n    delayNodeConstructor: TDelayNodeConstructor,\n    dynamicsCompressorNodeConstructor: TDynamicsCompressorNodeConstructor,\n    gainNodeConstructor: TGainNodeConstructor,\n    iIRFilterNodeConstructor: TIIRFilterNodeConstructor,\n    minimalBaseAudioContextConstructor: TMinimalBaseAudioContextConstructor,\n    oscillatorNodeConstructor: TOscillatorNodeConstructor,\n    pannerNodeConstructor: TPannerNodeConstructor,\n    periodicWaveConstructor: TPeriodicWaveConstructor,\n    stereoPannerNodeConstructor: TStereoPannerNodeConstructor,\n    waveShaperNodeConstructor: TWaveShaperNodeConstructor\n) => TBaseAudioContextConstructor;\n"]}},"error":null,"hash":"850ba39367cec084dc21e04dbb328e12","cacheData":{"env":{}}}