{"id":"../node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/interfaces/audio-scheduled-source-node.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"audio-scheduled-source-node.js","sourceRoot":"","sources":["../../../src/interfaces/audio-scheduled-source-node.ts"],"names":[],"mappings":"","sourcesContent":["import { TContext, TEventHandler } from '../types';\nimport { IAudioNode } from './audio-node';\nimport { IAudioScheduledSourceNodeEventMap } from './audio-scheduled-source-node-event-map';\n\nexport interface IAudioScheduledSourceNode<T extends TContext> extends IAudioNode<T> {\n    onended: null | TEventHandler<this>;\n\n    addEventListener<K extends keyof IAudioScheduledSourceNodeEventMap>(\n        type: K,\n        listener: (this: this, event: IAudioScheduledSourceNodeEventMap[K]) => void,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n\n    removeEventListener<K extends keyof IAudioScheduledSourceNodeEventMap>(\n        type: K,\n        listener: (this: this, event: IAudioScheduledSourceNodeEventMap[K]) => void,\n        options?: boolean | EventListenerOptions\n    ): void;\n\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n\n    start(when?: number): void;\n\n    stop(when?: number): void;\n}\n"]}},"error":null,"hash":"d34c810f4dc23acc6f3218c9372b8e4c","cacheData":{"env":{}}}