{"id":"../node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/types/dynamics-compressor-node-constructor-factory.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"dynamics-compressor-node-constructor-factory.js","sourceRoot":"","sources":["../../../src/types/dynamics-compressor-node-constructor-factory.ts"],"names":[],"mappings":"","sourcesContent":["import { TAudioNodeConstructor } from './audio-node-constructor';\nimport { TAudioParamFactory } from './audio-param-factory';\nimport { TDynamicsCompressorNodeConstructor } from './dynamics-compressor-node-constructor';\nimport { TDynamicsCompressorNodeRendererFactory } from './dynamics-compressor-node-renderer-factory';\nimport { TGetNativeContextFunction } from './get-native-context-function';\nimport { TIsNativeOfflineAudioContextFunction } from './is-native-offline-audio-context-function';\nimport { TNativeDynamicsCompressorNodeFactory } from './native-dynamics-compressor-node-factory';\nimport { TNotSupportedErrorFactory } from './not-supported-error-factory';\n\nexport type TDynamicsCompressorNodeConstructorFactory = (\n    audioNodeConstructor: TAudioNodeConstructor,\n    createAudioParam: TAudioParamFactory,\n    createDynamicsCompressorNodeRenderer: TDynamicsCompressorNodeRendererFactory,\n    createNativeDynamicsCompressorNode: TNativeDynamicsCompressorNodeFactory,\n    createNotSupportedError: TNotSupportedErrorFactory,\n    getNativeContext: TGetNativeContextFunction,\n    isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction\n) => TDynamicsCompressorNodeConstructor;\n"]}},"error":null,"hash":"a40f972bcb9ebf0aeaf77dedd5269f3c","cacheData":{"env":{}}}