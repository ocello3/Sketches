{"id":"../node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/interfaces/biquad-filter-node.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"biquad-filter-node.js","sourceRoot":"","sources":["../../../src/interfaces/biquad-filter-node.ts"],"names":[],"mappings":"","sourcesContent":["import { TBiquadFilterType, TContext } from '../types';\nimport { IAudioNode } from './audio-node';\nimport { IAudioParam } from './audio-param';\n\nexport interface IBiquadFilterNode<T extends TContext> extends IAudioNode<T> {\n    readonly detune: IAudioParam;\n\n    readonly frequency: IAudioParam;\n\n    readonly gain: IAudioParam;\n\n    readonly Q: IAudioParam;\n\n    type: TBiquadFilterType;\n\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\n}\n"]}},"error":null,"hash":"476207da24fbde9172a2094dcf1e6e30","cacheData":{"env":{}}}