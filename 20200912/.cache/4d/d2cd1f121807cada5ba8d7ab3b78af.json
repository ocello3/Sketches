{"id":"../node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/interfaces/audio-buffer.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"audio-buffer.js","sourceRoot":"","sources":["../../../src/interfaces/audio-buffer.ts"],"names":[],"mappings":"","sourcesContent":["export interface IAudioBuffer {\n    readonly duration: number;\n\n    readonly length: number;\n\n    readonly numberOfChannels: number;\n\n    readonly sampleRate: number;\n\n    copyFromChannel(destination: Float32Array, channelNumber: number, bufferOffset?: number): void;\n\n    copyToChannel(source: Float32Array, channelNumber: number, bufferOffset?: number): void;\n\n    getChannelData(channel: number): Float32Array;\n}\n"]}},"error":null,"hash":"25f0b5a189d3d4132bd48f25507e9fff","cacheData":{"env":{}}}