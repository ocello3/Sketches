{"id":"../node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/interfaces/audio-param.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"audio-param.js","sourceRoot":"","sources":["../../../src/interfaces/audio-param.ts"],"names":[],"mappings":"","sourcesContent":["export interface IAudioParam {\n    readonly defaultValue: number;\n\n    readonly maxValue: number;\n\n    readonly minValue: number;\n\n    value: number;\n\n    cancelAndHoldAtTime(cancelTime: number): IAudioParam;\n\n    cancelScheduledValues(cancelTime: number): IAudioParam;\n\n    exponentialRampToValueAtTime(value: number, endTime: number): IAudioParam;\n\n    linearRampToValueAtTime(value: number, endTime: number): IAudioParam;\n\n    setTargetAtTime(target: number, startTime: number, timeConstant: number): IAudioParam;\n\n    setValueAtTime(value: number, startTime: number): IAudioParam;\n\n    setValueCurveAtTime(values: Float32Array, startTime: number, duration: number): IAudioParam;\n}\n"]}},"error":null,"hash":"a16ba8b716de515a9ee6f9d539e11d44","cacheData":{"env":{}}}