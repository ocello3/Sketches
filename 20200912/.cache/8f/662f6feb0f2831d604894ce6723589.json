{"id":"../node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/types/decode-audio-data-factory.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"decode-audio-data-factory.js","sourceRoot":"","sources":["../../../src/types/decode-audio-data-factory.ts"],"names":[],"mappings":"","sourcesContent":["import { TAudioBufferStore } from './audio-buffer-store';\nimport { TCacheTestResultFunction } from './cache-test-result-function';\nimport { TDataCloneErrorFactory } from './data-clone-error-factory';\nimport { TDecodeAudioDataFunction } from './decode-audio-data-function';\nimport { TEncodingErrorFactory } from './encoding-error-factory';\nimport { TGetNativeContextFunction } from './get-native-context-function';\nimport { TIsNativeContextFunction } from './is-native-context-function';\nimport { TIsNativeOfflineAudioContextFunction } from './is-native-offline-audio-context-function';\nimport { TNativeAudioBuffer } from './native-audio-buffer';\nimport { TNativeContext } from './native-context';\nimport { TNativeOfflineAudioContextConstructor } from './native-offline-audio-context-constructor';\nimport { TWrapAudioBufferCopyChannelMethodsFunction } from './wrap-audio-buffer-copy-channel-methods-function';\nimport { TWrapAudioBufferCopyChannelMethodsOutOfBoundsFunction } from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-function';\n\nexport type TDecodeAudioDataFactory = (\n    audioBufferStore: TAudioBufferStore,\n    cacheTestResult: TCacheTestResultFunction,\n    createDataCloneError: TDataCloneErrorFactory,\n    createEncodingError: TEncodingErrorFactory,\n    detachedArrayBuffers: WeakSet<ArrayBuffer>,\n    getNativeContext: TGetNativeContextFunction,\n    isNativeContext: TIsNativeContextFunction,\n    isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction,\n    nativeOfflineAudioContextConstructor: null | TNativeOfflineAudioContextConstructor,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport: (nativeAudioBuffer: TNativeAudioBuffer) => boolean,\n    testPromiseSupport: (nativeContext: TNativeContext) => boolean,\n    wrapAudioBufferCopyChannelMethods: TWrapAudioBufferCopyChannelMethodsFunction,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds: TWrapAudioBufferCopyChannelMethodsOutOfBoundsFunction\n) => TDecodeAudioDataFunction;\n"]}},"error":null,"hash":"6cf5cd84f6f8e9b122bd69b496e570f2","cacheData":{"env":{}}}