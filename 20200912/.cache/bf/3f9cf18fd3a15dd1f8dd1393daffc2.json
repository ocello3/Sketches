{"id":"../node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/types/is-supported-promise-factory.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"is-supported-promise-factory.js","sourceRoot":"","sources":["../../../src/types/is-supported-promise-factory.ts"],"names":[],"mappings":"","sourcesContent":["import { TCacheTestResultFunction } from './cache-test-result-function';\n\nexport type TIsSupportedPromiseFactory = (\n    cacheTestResult: TCacheTestResultFunction,\n    testAudioBufferCopyChannelMethodsSubarraySupport: () => boolean,\n    testAudioContextCloseMethodSupport: () => boolean,\n    testAudioContextDecodeAudioDataMethodTypeErrorSupport: () => Promise<boolean>,\n    testAudioContextOptionsSupport: () => boolean,\n    testAudioNodeConnectMethodSupport: () => boolean,\n    testAudioWorkletProcessorNoOutputsSupport: () => Promise<boolean>,\n    testChannelMergerNodeChannelCountSupport: () => boolean,\n    testConstantSourceNodeAccurateSchedulingSupport: () => boolean,\n    testConvolverNodeBufferReassignabilitySupport: () => boolean,\n    testIsSecureContextSupport: () => boolean,\n    testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport: () => boolean,\n    testStereoPannerNodeDefaultValueSupport: () => Promise<boolean>,\n    testTransferablesSupport: () => Promise<boolean>\n) => Promise<boolean>;\n"]}},"error":null,"hash":"768363644f202af9fbadb8d295a5bfee","cacheData":{"env":{}}}