{"id":"../node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js","dependencies":[{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/src/types/audio-param-factory.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/daiki/Sketches/20200912/package.json","includedInParent":true,"mtime":1600613796599},{"name":"/Users/daiki/Sketches/20200912/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1600612523678}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"audio-param-factory.js","sourceRoot":"","sources":["../../../src/types/audio-param-factory.ts"],"names":[],"mappings":"","sourcesContent":["import { IAudioNode, IAudioParam } from '../interfaces';\nimport { TContext } from './context';\nimport { TNativeAudioParam } from './native-audio-param';\n\nexport type TAudioParamFactory = <T extends TContext>(\n    audioNode: IAudioNode<T>,\n    isAudioParamOfOfflineAudioContext: boolean,\n    nativeAudioParam: TNativeAudioParam,\n    maxValue?: null | number,\n    minValue?: null | number\n) => IAudioParam;\n"]}},"error":null,"hash":"05127b233fc672a5d498c0e618b7972c","cacheData":{"env":{}}}